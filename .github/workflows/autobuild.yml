name: Auto Build

on:
    push:
        branches: [master]
    workflow_dispatch:

jobs:
    build:
        runs-on: windows-latest

        steps:
            - uses: actions/checkout@v2

            # Setup Nuget
            - name: Setup NuGet
              uses: NuGet/setup-nuget@v1.0.5

            # Setup MSBuild
            - name: Setup MSBuild
              uses: microsoft/setup-msbuild@v1.0.2

            # Setup 7-Zip
            - name: Setup 7-Zip
              run: curl https://www.7-zip.org/a/7z1900-x64.exe --output 7z.exe

            # Check Nuget Packages Cache
            - uses: actions/cache@v2
              with:
                path: ~/.nuget/packages
                # Look to see if there is a cache hit for the corresponding requirements file
                key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-nuget

            # Restore Nuget Packages
            - name: Restore Nuget Packages
              run: nuget restore "Ancient Mysteries.sln"

            # Build the Solution
            - name: Build the Solution
              run: msbuild "Ancient Mysteries.sln" /p:Configuration=Release /p:OutputPath=buildOutput

            # Pack built files into single zip
            - name: Pack built files
              run: .\7z.exe a -tzip "~\release.zip" ".\buildOutput\*"

            # Create Release
            - name: Generate Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Build ${{ github.ref }}
                  body: Generated
                  draft: false
                  prerelease: true

            # Upload Release
            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ~\release.zip
                  asset_name: AncientMysteriesMod_${{ github.ref }}.zip
                  asset_content_type: application/zip
